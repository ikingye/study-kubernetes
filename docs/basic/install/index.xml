<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>安装 on Kubernetes 学习笔记</title>
    <link>https://ikingye.github.io/study-kubernetes/docs/basic/install/</link>
    <description>Recent content in 安装 on Kubernetes 学习笔记</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://ikingye.github.io/study-kubernetes/docs/basic/install/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>配置</title>
      <link>https://ikingye.github.io/study-kubernetes/docs/basic/install/config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-kubernetes/docs/basic/install/config/</guid>
      <description>Kubernetes 配置 #  apiserver #  修改 Kubernetes apiserver 启动参数 #  如果您使用 kubeadm 安装 Kubernetes 集群，Kubernetes apiserver 通过 static pod 启动，
其 yaml 文件的位置在 /etc/kubernetes/manifests/kube-apiserver.yaml
 Static Pod 的配置文件被修改后，立即生效。 Kubelet 会监听该文件的变化，当您修改了 /etc/kubenetes/manifest/kube-apiserver.yaml 文件之后，kubelet 将自动终止原有的 kube-apiserver-{nodename} 的 Pod，并自动创建一个使用了新配置参数的 Pod 作为替代。 如果您有多个 Kubernetes Master 节点，您需要在每一个 Master 节点上都修改该文件，并使各节点上的参数保持一致。  参考：
 修改 Kubernetes apiserver 启动参数  </description>
    </item>
    
    <item>
      <title>Kubeadm</title>
      <link>https://ikingye.github.io/study-kubernetes/docs/basic/install/kubeadm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-kubernetes/docs/basic/install/kubeadm/</guid>
      <description>Kubeadm #  kubernetes/kubeadm Kubeadm is a tool built to provide best-practice &amp;ldquo;fast paths&amp;rdquo; for creating Kubernetes clusters. It performs the actions necessary to get a minimum viable, secure cluster up and running in a user friendly way. Kubeadm&amp;rsquo;s scope is limited to the local node filesystem and the Kubernetes API, and it is intended to be a composable building block of higher level tools.
教程 #  Getting Started With Kubeadm #  from katacoda</description>
    </item>
    
    <item>
      <title>MicroK8s</title>
      <link>https://ikingye.github.io/study-kubernetes/docs/basic/install/microk8s/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-kubernetes/docs/basic/install/microk8s/</guid>
      <description>MicroK8s #  ubuntu/microk8s MicroK8s is a small, fast, single-package Kubernetes for developers, IoT and edge.
https://microk8s.io
Pros: #   Very easy to install, upgrade, remove Completely isolated from other tools in your machine Does not need a VM, all services run locally  Cons: #   Only available for Snap supported Linux Distributions Relatively new, possible unstable Minikube can also run directly on Linux (vmdriver=none), so MicroK8s value proposition is diminished   参考 #   Local Kubernetes for Linux – MiniKube vs MicroK8s  </description>
    </item>
    
    <item>
      <title>MiniKube</title>
      <link>https://ikingye.github.io/study-kubernetes/docs/basic/install/minikube/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-kubernetes/docs/basic/install/minikube/</guid>
      <description>MiniKube #  kubernetes/minikube Run Kubernetes locally
https://minikube.sigs.k8s.io
安装 #  MacOS 1. Install kubectl  2. Install a Hypervisor  HyperKit VirtualBox VMware Fusion   3. Install Minikube Homebrew brew install minikube
curl curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-darwin-amd64 \ &amp;amp;&amp;amp; chmod +x minikube sudo mv minikube /usr/local/bin Linux Windows  参考：https://kubernetes.io/docs/tasks/tools/install-minikube/
启动 #    minikube start --registry-mirror=https://registry.docker-cn.com --image-repository=registry.cn-hangzhou.aliyuncs.com/google_containers
  minikube start --cpus=2 --disk-size=&#39;10g&#39; --image-mirror-country=&#39;cn&#39; --image-repository=&#39;registry.cn-hangzhou.aliyuncs.com/google_containers&#39;
  minikube start --image-mirror-country=&#39;cn&#39; --registry-mirror=https://registry.</description>
    </item>
    
  </channel>
</rss>
